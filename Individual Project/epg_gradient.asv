function [omega_postg] = epg_gradient(seq,omega)
 
delta_k=ceil(seq.Gt);

if delta_k==0
    omega_postg=omega;

else
    if n>1
        F = [fliplr(omega(1,:)) omega(2,2:end)]; % equation [27] at time t from the paper [ F2(t), F1(t), F0(t), F-1(t), F-2(t), ...]'
        if delta_k>0
            F=[F zeros(1,delta_k)]; % F-state components are pushed upwards due to positive gradient F_k -> F_k+delta_k
            F_dph=fliplr(F(1:n+delta_k));
            F_rph=[F(n+delta_k:end) zeros(1,delta_k)];
            Z=[squeeze(omega(3,:)) zeros(1,delta_k)];
            F_dph(1)=conj(F_rph(1));

        else
        F=[zeros(1,delta_k) F];
        F_dph=[fliplr(F(1:n)) zeros(1,delta_k)];
        Z=[squeeze(omega(3,:)) zeros(1,delta_k)];
        F_rph=F(n:end);
        F_rph(1)=conj(F_dph(1));
    end
    
end

omega_postg = [F_dph;F_rph;Z];


end

